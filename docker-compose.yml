version: '3.8'

services:
  reservations:
    build:
        context: .
        dockerfile: ./apps/reservations/Dockerfile
        target: development
    command: pnpm run start:dev reservations
    env_file:
      - ./apps/reservations/.env
    ports:
      - "3000:3000"
    volumes:
      - .:/usr/src/app
    networks:
        - backend
  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: pnpm run start:dev auth
    env_file:
      - ./apps/auth/.env
    ports:
      - "3001:3001"
    volumes:
      - .:/usr/src/app
    networks:
      - backend
  payments:
    build:
      context: .
      dockerfile: ./apps/payments/Dockerfile
      target: development
    command: pnpm run start:dev payments
    env_file:
      - ./apps/payments/.env
    volumes:
      - .:/usr/src/app
    networks:
      - backend
  notifications:
    build:
      context: .
      dockerfile: ./apps/notifications/Dockerfile
      target: development
    command: pnpm run start:dev notifications
    env_file:
      - ./apps/notifications/.env
    volumes:
      - .:/usr/src/app
    networks:
      - backend
  mongo:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"  # Expose MongoDB port
    environment:
      MONGO_INITDB_ROOT_USERNAME: root  # Set root username
      MONGO_INITDB_ROOT_PASSWORD: example  # Set root password
    volumes:
      - mongo_data:/data/db  # Persist data
    networks:
      - backend

volumes:
  mongo_data:

networks:
    backend:
        driver: bridge